# @configure_input@
SRC = @abs_srcdir@
BUILD = @abs_builddir@

OUTFORMATS =
OUTTYPES =

@lame_TRUE@                    OUTFORMATS += mp3
@oggenc_TRUE@                  OUTFORMATS += ogg
@flac_TRUE@                    OUTFORMATS += flac
@timidity_TRUE@                OUTTYPES += timidity-campbell
@timidity_TRUE@                OUTTYPES += timidity-freepats
@linuxsampler_TRUE@            OUTTYPES += linuxsampler-maestro
@linuxsampler_pleyelp190_TRUE@ OUTTYPES += linuxsampler-pleyelp190
@linuxsampler_steinwayc_TRUE@  OUTTYPES += linuxsampler-steinwayc

# Programs we use
CP ?= cp
PATCH ?= patch
LILYPOND ?= lilypond
LILYPONDFLAGS ?=
TIMIDITY ?= timidity
TIMIDITYFLAGS ?=
TIMIDITY_SETSOUNDFONT_PRE = -x "dir /\nsoundfont
TIMIDITY_SETSOUNDFONT_POST = "
TIMIDITY_SETGUSPATCH_PRE = -x "dir /\nfont exclude 0 0\nbank 0\n0
TIMIDITY_SETGUSPATCH_POST = "
LAME ?= lame
LAMEFLAGS ?= --preset standard
OGGENC ?= oggenc
OGGENCFLAGS ?= -q3
FLAC ?= flac
FLACFLAGS ?= -8

# Source files
RG = $(wildcard $(SRC)/*/*.rg)
LY_DIFF = $(patsubst $(SRC)/%.rg,$(SRC)/%.ly.diff,$(RG))

# Saved intermediate files (part of the source distribution)
MID = $(patsubst $(SRC)/%.rg,$(SRC)/%.mid,$(RG))
LY_ORIG = $(patsubst $(SRC)/%.rg,$(SRC)/%.ly.orig,$(RG))

# Intermediate files
MID_FORMAT0 = $(patsubst $(SRC)/%.rg,$(BUILD)/%-format0.mid,$(RG))
LY = $(patsubst $(SRC)/%.rg,$(BUILD)/%.ly,$(RG))

# Output files
PDF = $(patsubst $(SRC)/%.rg,$(BUILD)/%.pdf,$(RG))
AUDIO = $(foreach OUTFORMAT,$(OUTFORMATS),$(foreach OUTTYPE,$(OUTTYPES),$(patsubst $(SRC)/%.rg,$(BUILD)/%-$(OUTTYPE).$(OUTFORMAT),$(RG))))

all: audio sheet

audio: $(AUDIO)
	$(CLEANTEMP)

sheet: $(PDF)
	$(CLEANTEMP)

manual: $(MID) $(LY_ORIG)
	$(CLEANTEMP)


$(BUILD)/support:
	mkdir -p $(BUILD)/support

$(BUILD)/support/CampbellsPianoBeta2.sf2: | $(BUILD)/support
	cd $(BUILD)/support && wget -O 'CampbellsPianoBeta2.rar' 'http://www.hammersound.com/cgi-bin/soundlink_download2.pl/Download%20USA;CampbellsPianoBeta2.rar;505'
	cd $(BUILD)/support && unrar x 'CampbellsPianoBeta2.rar' 'CampbellsPianoBeta2.sf2'
	cd $(BUILD)/support && rm -f 'CampbellsPianoBeta2.rar'

$(BUILD)/support/000_Acoustic_Grand_Piano.pat: | $(BUILD)/support
	cd $(BUILD)/support && wget -O '000_Acoustic_Grand_Piano.pat' 'http://freepats.zenvoid.org/freepats/Tone_000/000_Acoustic_Grand_Piano.pat'

$(BUILD)/support/maestro_concert_grand_v2.gig: | $(BUILD)/support
	cd $(BUILD)/support && wget -O 'maestro_concert_grand_v2.rar' 'http://download.linuxsampler.org/instruments/pianos/maestro_concert_grand_v2.rar'
	cd $(BUILD)/support && unrar x 'maestro_concert_grand_v2.rar' 'maestro_concert_grand_v2.gig'
	cd $(BUILD)/support && rm -f 'maestro_concert_grand_v2.rar'

$(BUILD)/support/classicpianos-pleyel_ambient_p190.giga-*.rar: | $(BUILD)/support
	@echo
	@echo
	@echo MANUAL TASK:
	@echo Register at http://www.gigfiles.com/freebees.php
	@echo and download the FREE Piano set
	@echo Pleyel Ambient P190
	@echo
	@echo Place the downloaded file in
	@echo $@
	@echo to proceed.
	@echo
	@echo
	@false
$(BUILD)/support/PleyelP190.gig: | $(BUILD)/support $(BUILD)/support/classicpianos-pleyel_ambient_p190.giga-*.rar
	cd $(BUILD)/support && unrar x classicpianos-pleyel_ambient_p190.giga-*.rar 'Pleyel P190.gig' && mv 'Pleyel P190.gig' 'PleyelP190.gig'

$(BUILD)/support/classicpianos-steinway_c.giga-*.rar: | $(BUILD)/support
	@echo
	@echo
	@echo MANUAL TASK:
	@echo Register at http://www.gigfiles.com/freebees.php
	@echo and download the FREE Piano set
	@echo Steinway C
	@echo
	@echo Place the downloaded file in
	@echo $@
	@echo to proceed.
	@echo
	@echo
	@false
support/SteinwayC.gig: | $(BUILD)/support $(BUILD)/support/classicpianos-steinway_c.giga-*.rar
	cd support && unrar x classicpianos-steinway_c.giga-*.rar 'Steinway C.gig' && mv 'Steinway C.gig' 'SteinwayC.gig'


# Format 0 MIDI (friendly for the synths)
$(BUILD)/%-format0.mid: $(SRC)/%.mid
	bin/to_format0.pl $< $@ 0 5 1

# Audio renderers
$(BUILD)/%-timidity-campbell-uncut.wav: $(BUILD)/%-format0.mid | $(BUILD)/support/CampbellsPianoBeta2.sf2
	$(TIMIDITY) $(TIMIDITYFLAGS) $(TIMIDITY_SETSOUNDFONT_PRE) $| $(TIMIDITY_SETSOUNDFONT_POST) -EI0 -EFreverb=G,70 -EFchorus=n,40 -Ow -o $@ $<
$(BUILD)/%-timidity-freepats-uncut.wav: $(BUILD)/%-format0.mid | $(BUILD)/support/000_Acoustic_Grand_Piano.pat
	$(TIMIDITY) $(TIMIDITYFLAGS) $(TIMIDITY_SETGUSPATCH_PRE)  $| $(TIMIDITY_SETGUSPATCH_POST)  -EI0 -EFreverb=G,70 -EFchorus=n,40 -Ow -o $@ $<

$(BUILD)/%-linuxsampler-pleyelp190-uncut.wav: $(BUILD)/%-format0.mid | $(BUILD)/support/PleyelP190.gig
	bin/linuxsampler.sh $< $| $@
$(BUILD)/%-linuxsampler-steinwayc-uncut.wav: $(BUILD)/%-format0.mid | $(BUILD)/support/SteinwayC.gig
	bin/linuxsampler.sh $< $| $@

# hack: needs extra reverb
$(BUILD)/%-linuxsampler-maestro-uncut.wav: $(BUILD)/%-linuxsampler-maestro-raw.wav
	sox $< $@ reverb 50 50 60 100 0 0
$(BUILD)/%-linuxsampler-maestro-raw.wav: $(BUILD)/%-format0.mid | $(BUILD)/support/maestro_concert_grand_v2.gig
	bin/linuxsampler.sh $< $| $@

.SECONDARY: %.mid
$(BUILD)/%-ramp.rg: $(SRC)/%.rg
	< $< gunzip | bin/autoramp.pl | gzip > $@
	
$(SRC)/%.mid: | $(BUILD)/%-ramp.rg
	@echo
	@echo
	@echo MANUAL TASK:
	@echo Please export to MIDI as $@
	@echo
	@echo
	rosegarden $| >/dev/null 2>&1
	[ -f $@ ]

.SECONDARY: %.ly.orig
$(SRC)/%.ly.orig: | $(SRC)/%.rg
	@echo
	@echo
	@echo MANUAL TASK:
	@echo Please export to Lilypond as $@
	@echo
	@echo
	rosegarden $| >/dev/null 2>&1
	[ -f $@ ]


# Audio transforms

$(BUILD)/%.wav: $(BUILD)/%-uncut.wav
	sox $< $@ silence 1 0 0% reverse silence 1 0 0% reverse

$(BUILD)/%.flac: $(BUILD)/%.wav
	$(FLAC) $(FLACFLAGS) -f -o $@ $< && touch $@

$(BUILD)/%.mp3: $(BUILD)/%.wav
	$(LAME) $(LAMEFLAGS) $< $@
	mp3gain -r -k $@

$(BUILD)/%.ogg: $(BUILD)/%.wav
	$(OGGENC) $(OGGENCFLAGS) -o $@ $<
	vorbisgain $@


# PDF making
$(BUILD)/%.ly: $(SRC)/%.ly.diff $(SRC)/%.ly.orig
	set -- $^ && $(CP) $$2 $@
	set -- $^ && $(PATCH) $@ $$1

$(BUILD)/%.pdf: $(BUILD)/%.ly
	$(LILYPOND) $(LILYPONDFLAGS) -o $* $<


# Cleanup
clean:
	$(CLEANTEMP)
	$(RM) $(AUDIO) $(WAV) $(LY) $(PDF) $(MID_FORMAT0)

realclean: clean
	$(CLEANTEMP)
	$(RM) support $(LY_ORIG) $(MID)

# global options
.EXPORT_ALL_VARIABLES:
